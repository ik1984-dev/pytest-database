# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ FastAPI –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
from fastapi import FastAPI, Depends, HTTPException, status
from fastapi.middleware.cors import CORSMiddleware  # –î–ª—è CORS (–º–µ–∂–¥–æ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤)
from sqlalchemy.orm import Session  # –î–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ —Å–µ—Å—Å–∏–∏ –ë–î
from typing import List  # –î–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–æ–≤

# üì¶ –ò–ú–ü–û–†–¢–´ –ò–ó –ü–†–û–ï–ö–¢–ê
from app import models, schemas, crud  # –ú–æ–¥–µ–ª–∏, —Å—Ö–µ–º—ã –∏ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏
from app.database import engine, get_db  # –î–≤–∏–∂–æ–∫ –ë–î –∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–µ—Å—Å–∏–π

# üóÉÔ∏è –°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶ –í –ë–ê–ó–ï –î–ê–ù–ù–´–•
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ SQLAlchemy –º–æ–¥–µ–ª–µ–π
# –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –º–∏–≥—Ä–∞—Ü–∏–∏ (Alembic)
models.Base.metadata.create_all(bind=engine)

# üöÄ –°–û–ó–î–ê–ù–ò–ï FASTAPI –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
app = FastAPI(title="User Management API")  # –° –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏

# üåê –ù–ê–°–¢–†–û–ô–ö–ê CORS (CROSS-ORIGIN RESOURCE SHARING)
# –†–∞–∑—Ä–µ—à–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (React –Ω–∞ –ø–æ—Ä—Ç—É 3000)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["http://localhost:3000", "http://127.0.0.1:3000"],  # –î–æ–º–µ–Ω—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    allow_credentials=True,  # –†–∞–∑—Ä–µ—à–∏—Ç—å –∫—É–∫–∏ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    allow_methods=["*"],  # –†–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ HTTP –º–µ—Ç–æ–¥—ã (GET, POST, etc.)
    allow_headers=["*"],  # –†–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
)


# üè† –ö–û–†–ù–ï–í–û–ô –≠–ù–î–ü–û–ò–ù–¢ - –ü–†–û–í–ï–†–ö–ê –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò API
@app.get("/")
def read_root():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç—ã API"""
    return {"message": "User Management API is running"}


# üë§ –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
@app.post("/users/", response_model=schemas.User, status_code=status.HTTP_201_CREATED)
def create_user(user: schemas.UserCreate, db: Session = Depends(get_db)):
    """
    –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ
    - –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ —Å—Ö–µ–º—É UserCreate
    - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å email
    - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    # –í—ã–∑—ã–≤–∞–µ–º CRUD –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db_user = crud.create_user(db=db, user=user)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if db_user is None:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É 400 Bad Request
        raise HTTPException(
            status_code=status.HTTP_400_BAD_REQUEST,
            detail="Email already registered"
        )

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ JSON)
    return db_user


# üìã –ü–û–õ–£–ß–ï–ù–ò–ï –°–ü–ò–°–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –° –ü–ê–ì–ò–ù–ê–¶–ò–ï–ô
@app.get("/users/", response_model=List[schemas.User])
def read_users(skip: int = 0, limit: int = 100, db: Session = Depends(get_db)):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    - skip: —Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å (–¥–ª—è –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞)
    - limit: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100)
    """
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ CRUD —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    users = crud.get_users(db, skip=skip, limit=limit)
    return users


# üîç –ü–û–õ–£–ß–ï–ù–ò–ï –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ü–û ID
@app.get("/users/{user_id}", response_model=schemas.User)
def read_user(user_id: int, db: Session = Depends(get_db)):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ ID
    - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 404 –æ—à–∏–±–∫—É
    """
    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_user = crud.get_user_by_id(db, user_id=user_id)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    if db_user is None:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É 404 Not Found
        raise HTTPException(status_code=404, detail="User not found")

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    return db_user